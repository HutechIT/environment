apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: migrate
          image: {{ .Values.server.image }}:{{ .Values.tag }}
          command:
            - appctl
            - migrate
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: user-password
            - name: DB_USERNAME
              value: {{ .Values.database.username }}
            - name: DB_DATABASE
              value: {{ .Values.database.database }}
            - name: DB_HOST
              value: {{ .Values.database.host }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/app
      containers:
        - name: server
          image: {{ .Values.server.image }}:{{ .Values.tag }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: user-password
            - name: DB_USERNAME
              value: {{ .Values.database.username }}
            - name: DB_DATABASE
              value: {{ .Values.database.database }}
            - name: DB_HOST
              value: {{ .Values.database.host }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /app
      volumes:
      - name: data
        persistentVolumeClaim:
            claimName: server-storage
